{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/mediacontrols.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\t\tslide.style.placeContent = 'center stretch';\n\t\tif (this.Reveal.getConfig().center) slide.style.alignItems = 'center';\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundSize = slide.getAttribute( 'data-background-size' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoClass = slide.getAttribute( 'data-background-video-class' ),\n\t\t\t\t\tbackgroundVideoStyle = slide.getAttribute( 'data-background-video-style' ),\n\t\t\t\t\tbackgroundVideoFragmentIndex = slide.getAttribute( 'data-background-video-fragment-index' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tlet image = document.createElement( 'img' );\n\t\t\t\t\t\timage.src = backgroundImage.trim();\n\t\t\t\t\t\tif ( backgroundSize ) image.style.objectFit = backgroundSize;\n\t\t\t\t\t\tbackgroundContent.appendChild( image );\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet images = backgroundImage.split( ',' ).map( ( background, i ) => {\n\t\t\t\t\t\t\tlet image = document.createElement( 'img' );\n\n\t\t\t\t\t\t\tlet imageClass = slide.hasAttribute( 'data-background-image-class-' + i ) ? slide.getAttribute ( 'data-background-image-class-' + i ) : undefined;\n\t\t\t\t\t\t\tlet imageStyle = slide.hasAttribute( 'data-background-image-style-' + i ) ? slide.getAttribute ( 'data-background-image-style-' + i ) : undefined;\n\t\t\t\t\t\t\tlet imageFragmentIndex = slide.hasAttribute( 'data-background-image-fragment-index-' + i ) ? slide.getAttribute ( 'data-background-image-fragment-index-' + i ).trim() : undefined;\n\n\t\t\t\t\t\t\tif ( imageStyle )\n\t\t\t\t\t\t\t\timage.style.cssText = imageStyle;\n\n\t\t\t\t\t\t\tif ( imageClass )\n\t\t\t\t\t\t\t\timageClass.split(' ').forEach( ( e, i ) => {\n\t\t\t\t\t\t\t\t\tif ( e && e.length > 0 ) image.classList.add( e );\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif ( imageFragmentIndex )\n\t\t\t\t\t\t\t\timage.setAttribute( 'data-fragment-index', imageFragmentIndex );\n\n\t\t\t\t\t\t\timage.classList.add( 'layer' + i );\n\n\t\t\t\t\t\t\timage.src = background.trim();\n\n\t\t\t\t\t\t\tif ( backgroundSize )\n\t\t\t\t\t\t\t\timage.style.objectFit = backgroundSize;\n\t\t\t\t\t\t\treturn image;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\timages.forEach( image => { backgroundContent.appendChild( image ) });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tbackgroundVideo.trim().split(';').forEach((vd, idx) => {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\t\t\t\t\tif ( backgroundVideoStyle )\n\t\t\t\t\t\tvideo.style.cssText = backgroundVideoStyle;\n\n\t\t\t\t\tif ( backgroundVideoClass )\n\t\t\t\t\t\tbackgroundVideoClass.split(' ').forEach( cls => {\n\t\t\t\t\t\t\tvideo.classList.add( cls );\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif ( backgroundVideoFragmentIndex && backgroundVideoFragmentIndex.trim().length > 0 ) {\n\t\t\t\t\t\t\tlet videoFragmentIndex = backgroundVideoFragmentIndex.trim().split(';');\n\t\t\t\t\t\t\tvideo.setAttribute( 'data-fragment-index', videoFragmentIndex[idx] || '0' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\t// video.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tvd.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tvideo.addEventListener('play', function(event) {\n\t\t\t\t\t\tlet v = event.target;\n\t\t\t\t\t\tv.classList.add('playing');\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('playing', function(event) {\n\t\t\t\t\t\tlet v = event.target;\n\t\t\t\t\t\tv.classList.add('playing');\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('pause', function(event) {\n\t\t\t\t\t\tlet v = event.target;\n\t\t\t\t\t\tv.classList.remove('playing');\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('waiting', function(event) {\n\t\t\t\t\t\tlet v = event.target;\n\t\t\t\t\t\tv.classList.remove('playing');\n\t\t\t\t\t});\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) &&\n\t\t\t\t    !closest( el, '.fragment.visible.current-fragment' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tif ( event.target.classList.contains( 'media-controls' ) ) {\n\t\t\t\tthis.Reveal.mediaControls.attach( event.target );\n\t\t\t}\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tif ( el.classList.contains( 'media-controls' ) ) {\n\t\t\t\t\t\tthis.Reveal.mediaControls.detach( el );\n\t\t\t\t\t}\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tconst query = this.jumpInput.value.trim( '' );\n\t\tlet indices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\n\t\t// If no valid index was found and the input query is a\n\t\t// string, fall back on a simple search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t\tbackgroundClass: slide.getAttribute( 'data-background-class' ) ? slide.getAttribute( 'data-background-class' ).split(' ') : null,\n\t\t\tbackgroundStyle: slide.getAttribute( 'data-background-style' ) ? slide.getAttribute( 'data-background-style' ).split(';') : null,\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundPosition ) contentElement.style.objectPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\t\tif( data.backgroundClass ) data.backgroundClass.forEach((c, i) => { contentElement.classList.add(c); });\n\t\tif( data.backgroundStyle ) data.backgroundStyle.forEach((s, i) => {\n\t\t\tif (s.length > 0) {\n\t\t\t\tlet p = s.split(':');\n\t\t\t\tlet v;\n\t\t\t\tif (p[1]) v = p[1].split('!');\n\t\t\t\tif (v)\n\t\t\t\t\tcontentElement.style.setProperty(p[0].trim(), v[0] ? v[0].trim() : v[0], v[1] ? v[1].trim() : v[1]);\n\t\t\t\telse\n\t\t\t\t\tcontentElement.style.setProperty(p[0].trim(), undefined, undefined);\n\t\t\t}\n\t\t});\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js';\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = this.queryAllFragments( '.fragment:not(.disabled)', currentSlide );\n\t\t\tlet hiddenFragments = this.queryAllFragments( '.fragment:not(.disabled):not(.visible)', currentSlide );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( this.queryAllFragments( '.fragment', verticalSlide ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( this.queryAllFragments( '.fragment', horizontalSlide ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Query fragments on both slide and its background\n\t *\n\t * @param {string} [selector] The query selector string\n\t * @param {?element} [slide] The slide which the selection runs on\n\t *\n\t * @return [element]\n\t */\n\tqueryAllFragments( selector, slide = this.Reveal.getCurrentSlide() ) {\n\t\tlet background = this.Reveal.getSlideBackground(slide);\n\n\t\tlet fragments = queryAll( slide, selector );\n\t\tfragments = fragments.concat( queryAll ( background, selector ) );\n\n\t\treturn fragments;\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( this.queryAllFragments( '.fragment', currentSlide ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( this.queryAllFragments( '.fragment.visible', currentSlide ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' );\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t\tif ( ['VIDEO', 'AUDIO'].includes( el.tagName ) ) {\n\t\t\t\t\t\t\t\tel.currentTime = 0;\n\t\t\t\t\t\t\t\tif ( el.classList.contains( 'media-controls' ) ) {\n\t\t\t\t\t\t\t\t\tthis.Reveal.mediaControls.attach( el );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tel.play();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ['VIDEO', 'AUDIO'].includes( el.tagName ) ) {\n\t\t\t\t\t\t\tel.pause();\n\t\t\t\t\t\t\tif ( el.classList.contains( 'media-controls' ) ) {\n\t\t\t\t\t\t\t\tthis.Reveal.mediaControls.detach( el );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tif ( ['VIDEO', 'AUDIO'].includes( el.tagName ) ) {\n\t\t\t\t\t\t\t\tel.pause();\n\t\t\t\t\t\t\t\tel.currentTime = 0;\n\t\t\t\t\t\t\t\tif ( el.classList.contains( 'media-controls' ) ) {\n\t\t\t\t\t\t\t\t\tthis.Reveal.mediaControls.detach( el );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( this.queryAllFragments( '.fragment', slide ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( this.queryAllFragments( '.fragment:not(.disabled)', currentSlide ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( this.queryAllFragments( '.fragment:not(.disabled).visible', currentSlide ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif ( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides>section, .slides>section>section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual multimedia controls for the background video presentation.\n */\nexport default class MediaControls {\n\n\tfastForwardIcons = {\n\t\tundefined: 'mdi-fast-forward',\n\t\t'default': 'mdi-fast-forward',\n\t\t5: 'mdi-fast-forward-5',\n\t\t10: 'mdi-fast-forward-10',\n\t\t15: 'mdi-fast-forward-15',\n\t\t30: 'mdi-fast-forward-30',\n\t\t45: 'mdi-fast-forward-45',\n\t\t60: 'mdi-fast-forward-60',\n\t};\n\n\trewindIcons = {\n\t\tundefined: 'mdi-rewind',\n\t\t'default': 'mdi-rewind',\n\t\t5: 'mdi-rewind-5',\n\t\t10: 'mdi-rewind-10',\n\t\t15: 'mdi-rewind-15',\n\t\t30: 'mdi-rewind-30',\n\t\t45: 'mdi-rewind-45',\n\t\t60: 'mdi-rewind-60',\n\t};\n\n\tcontrols = {\n\t\t'play': {\n\t\t\t'icon': { 'lib': 'mdi-play' },\n\t\t\t'action': [ { 'name': 'click', 'func': this.onClickPlay } ],\n\t\t},\n\t\t'skipPrevious': {\n\t\t\t'icon': { 'lib': 'mdi-skip-previous' },\n\t\t\t'action': [ { 'name': 'click', 'func': this.onClickSkipPrev } ],\n\t\t},\n\t\t'rewind': {\n\t\t\t'icon': { 'lib': this.rewindIcons, 'param': 'step' },\n\t\t\t'action': [ { 'name': 'click', 'func': this.onClickRewind } ],\n\t\t},\n\t\t'fastForward': {\n\t\t\t'icon': { 'lib': this.fastForwardIcons, 'param': 'step' },\n\t\t\t'action': [ { 'name': 'click', 'func': this.onClickFastForward } ],\n\t\t}\n\t}\n\n\tdefaults = {\n\t\t'step': 5,\n\t\t'controls' : this.controls,\n\t};\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.media = [];\n\t\tthis.config = {};\n\t\tObject.entries(this.defaults).forEach((e, i, a) => {\n\t\t\tlet [key, value] = e;\n\t\t\tthis.config[ key ] = value;\n\t\t});\n\n\t}\n\n\tconfigure( config, oldConfig ) {\n\n\t\tif ( config.mediacontrols ) {\n\t\t\tObject.entries(config.mediacontrols).forEach((e, i, a) => {\n\t\t\t\tlet [key, value] = e;\n\t\t\t\tthis.config[ key ] = value || this.defaults[ key ];\n\t\t\t});\n\t\t}\n\n\n\t\tObject.entries(this.config.controls).forEach((e, i, a) => {\n\t\t\tlet [key, value] = e;\n\t\t\tvalue.element = this.createButton( key, value.action );\n\t\t\tthis.removeIcon( value.element );\n\t\t\tlet icon = this.createIcon( value.icon.lib, this.config[ value.icon.param ] );\n\t\t\tvalue.element.appendChild( icon );\n\t\t});\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.id = 'mediacontrols';\n\t\tthis.element.classList.add( 'mediacontrols' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\tgetConfig() {\n\t\treturn this.config;\n\t}\n\n\tcreateButton( id, action ) {\n\n\t\tthis.element.querySelectorAll( 'button#' + id ).forEach((e, i, a) => {\n\t\t\te.parentNode.removeChild( e );\n\t\t});\n\n\t\tlet button = document.createElement( 'button' );\n\t\tbutton.id = id;\n\t\taction.forEach((e, i, a) => {\n\t\t\tbutton.addEventListener( e.name, e.func.bind( this ), false);\n\t\t});\n\n\t\tthis.element.appendChild( button );\n\n\t\treturn button;\n\n\t}\n\n\tremoveIcon( button ) {\n\n\t\tif ( button !== undefined ) {\n\t\t\tbutton.querySelectorAll( 'i' ).forEach((e, i, a) => {\n\t\t\t\te.parentNode.removeChild( e );\n\t\t\t});\n\t\t}\n\n\t}\n\n\tcreateIcon( def, param ) {\n\t\t\n\t\tlet icon = document.createElement( 'i' );\n\t\ticon.classList.add( 'mdi' );\n\n\t\tif ( typeof def === 'string' ) {\n\t\t\ticon.classList.add( def );\n\t\t} else {\n\t\tlet name = def.hasOwnProperty( param ) ?\n\t\t    def[ param ] : param[ 'default' ];\n\t\t\ticon.classList.add( name );\n\t\t}\n\n\t\treturn icon;\n\n\t}\n\n\tattach( element ) {\n\n\t\tif ( this.media.indexOf( element ) > -1 )\n\t\t\treturn;\n\n\t\tthis.media.push( element );\n\n\t\telement.addEventListener( 'play', this.onMediaEvent.bind( this ), false );\n\t\telement.addEventListener( 'pause', this.onMediaEvent.bind( this ), false );\n\t\telement.addEventListener( 'ended', this.onMediaEvent.bind( this ), false );\n\n\t\tthis.visibilityToggle();\n\n\t}\n\n\tdetach( element ) {\n\n\t\telement.removeEventListener( 'play', this.onMediaEvent.bind( this ), false );\n\t\telement.removeEventListener( 'pause', this.onMediaEvent.bind( this ), false );\n\t\telement.removeEventListener( 'ended', this.onMediaEvent.bind( this ), false );\n\n\t\tlet index = this.media.indexOf( element );\n\t\tif (index > -1)\n\t\t\tthis.media.splice( index, 1 );\n\n\t\tthis.visibilityToggle();\n\n\t}\n\n\tvisibilityToggle() {\n\n\t\tif ( this.media.length > 0)\n\t\t\tthis.element.classList.add( 'visible' );\n\t\telse\n\t\t\tthis.element.classList.remove( 'visible' );\n\n\t}\n\n\tgetDefaultControlNames() {\n\t\treturn Object.keys( this.controls );\n\t}\n\n\tgetDefaultControl( name ) {\n\t\treturn this.controls[ name ];\n\t}\n\n\tonClickPlay( event ) {\n\n\t\tthis.media.forEach((e, i, a) => {\n\t\t\tif ( e.paused ) {\n\n\t\t\t\te.play();\n\n\t\t\t} else {\n\n\t\t\t\te.pause();\n\n\t\t\t}\n\t\t});\n\n\t}\n\n\tonClickFastForward( event ) {\n\n\t\tlet step = this.config.step;\n\n\t\tthis.media.forEach((e, i, a) => {\n\n\t\t\tlet currentTime = e.duration - e.currentTime > step ? e.currentTime + step : e.duration;\n\t\t\te.currentTime = currentTime;\n\n\t\t});\n\n\t}\n\n\tonClickRewind( event ) {\n\n\t\tlet step = this.config.step;\n\n\t\tthis.media.forEach((e, i, a) => {\n\n\t\t\tlet currentTime = e.currentTime > step ? e.currentTime - step : 0;\n\t\t\te.currentTime = currentTime;\n\n\t\t});\n\n\t}\n\n\tonClickSkipPrev( event ) {\n\n\t\tthis.media.forEach((e, i, a) => {\n\n\t\t\te.currentTime = 0;\n\n\t\t});\n\n\t}\n\n\tonMediaEvent( event ) {\n\n\t\tlet paused = this.media.every((e, i, a) => {\n\t\t\treturn e.paused || e.ended;\n\t\t});\n\n\t\tif ( paused ) {\n\n\t\t\tthis.controls.play.element.querySelector( 'i' ).classList.remove( 'mdi-pause' );\n\t\t\tthis.controls.play.element.querySelector( 'i' ).classList.add( 'mdi-play' );\n\n\t\t} else {\n\n\t\t\tthis.controls.play.element.querySelector( 'i' ).classList.remove( 'mdi-play' );\n\t\t\tthis.controls.play.element.querySelector( 'i' ).classList.add( 'mdi-pause' );\n\n\t\t}\n\t}\n}\n","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'grid',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatmically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}\n","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport MediaControls from './controllers/mediacontrols.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.6.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\t\tfullScale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tmediaControls = new MediaControls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\t\tmediaControls.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config };\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tmediaControls.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\tfullScale = 1 / ( 1 - config.margin );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\tdom.slides.style.display = 'grid';\n\t\t\t\t\tdom.slides.style.placeContent = 'center stretch';\n\t\t\t\t\tif (config.center) dom.slides.style.alignItems = 'center';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( !config.center && slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.alignSelf = 'center';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif( slide.hasAttribute( 'data-fullscreen' ) ) {\n\t\t\t\t\t\tslide.style.transform = 'scale(' + fullScale + ')';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tif( slideChanged ) {\n\t\t\tnotes.update();\n\t\t\tbackgrounds.update();\n\t\t\tbackgrounds.updateParallax();\n\t\t\tslideNumber.update();\n\t\t}\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t\telement.style.display = 'grid';\n\t\t\t\t\telement.style.placeContent = 'center stretch';\n\t\t\t\t\tif (config.center) element.style.alignItems = 'center';\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\t\tUtil.queryAll( Reveal.getSlideBackground( container ), '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\t\tUtil.queryAll( Reveal.getSlideBackground( container ), '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\t\tlet currentBackground = Reveal.getSlideBackground( currentSlide );\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\t\t\tlet allBackgroundFragments = currentBackground.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 || allBackgroundFragments.length > 0) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\t\t\t\tlet visibleBackgroundFragments = currentBackground.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( ( visibleFragments.length + visibleBackgroundFragments.length ) / ( allFragments.length + allBackgroundFragments.length ) ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet currentBackground = Reveal.getSlideBackground( currentSlide );\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0 || currentBackground.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment[data-fragment-index]' );\n\t\t\t\tlet currentBackgroundFragment = currentBackground.querySelector( '.current-fragment[data-fragment-index]' );\n\t\t\t\tif( currentFragment ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse if( currentBackgroundFragment ) {\n\t\t\t\t\tf = parseInt( currentBackgroundFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = -1;\n\t\t\t\t\tcurrentSlide.querySelectorAll( '.fragment.visible[data-fragment-index]' ).forEach((e, i) => {\n\t\t\t\t\t\tlet n = parseInt( e.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t\tf = Math.max(f, n);\n\t\t\t\t\t});\n\t\t\t\t\tcurrentBackground.querySelectorAll( '.fragment.visible[data-fragment-index]' ).forEach((e, i) => {\n\t\t\t\t\t\tlet n = parseInt( e.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t\tf = Math.max(f, n);\n\t\t\t\t\t});\n\t\t\t\t\tf += currentSlide.querySelectorAll( '.fragment.visible:not([data-fragment-index])' ).length;\n\t\t\t\t\tf += currentBackground.querySelectorAll( '.fragment.visible:not([data-fragment-index])' ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Media playback\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tmediaControls,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","Object","defineProperty","fitty_module","_extends","assign","arguments","source","key","prototype","hasOwnProperty","w","toArray","nl","slice","DrawState","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyle","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","destroy","_","observeMutations","observer","disconnect","originalStyle","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","newbie","push","init","unfreeze","freeze","undefined","window","SlideContent","constructor","Reveal","startEmbeddedIframe","this","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","placeContent","center","alignItems","tagName","setAttribute","getAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundSize","backgroundVideo","backgroundVideoClass","backgroundVideoStyle","backgroundVideoFragmentIndex","backgroundVideoLoop","backgroundVideoMuted","trim","image","src","objectFit","images","imageClass","imageStyle","imageFragmentIndex","isSpeakerNotes","vd","idx","video","cls","videoFragmentIndex","muted","filename","getMimeTypeFromFile","addEventListener","event","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","removeEventListener","isAttachedToDOM","isVisible","currentTime","contains","mediaControls","attach","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","detach","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","url","getHash","formatNumber","delimiter","isNaN","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","getSlides","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","backgroundClass","backgroundStyle","dataPreload","opacity","objectPosition","c","s","p","setProperty","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","join","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","queryAllFragments","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","includes","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","closeOverlay","Location","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","MAX_REPLACE_STATE_FREQUENCY","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","MediaControls","onClickPlay","onClickSkipPrev","rewindIcons","onClickRewind","fastForwardIcons","onClickFastForward","entries","defaults","mediacontrols","createButton","removeIcon","icon","createIcon","lib","button","func","def","onMediaEvent","visibilityToggle","splice","getDefaultControlNames","getDefaultControl","paused","step","every","ended","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Print","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","fullScale","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","alignSelf","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","allBackgroundFragments","visibleFragments","visibleBackgroundFragments","fragmentWeight","isVertical","currentBackgroundFragment","n","getSlidesAttributes","attributes","attribute","getSlide","indexf","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","Deck","enqueuedAPICalls","deck"],"mappings":"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"}