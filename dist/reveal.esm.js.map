{"version":3,"file":"reveal.esm.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/mediacontrols.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\t\tslide.style.placeContent = 'center stretch';\n\t\tif (this.Reveal.getConfig().center) slide.style.alignItems = 'center';\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundSize = slide.getAttribute( 'data-background-size' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoClass = slide.getAttribute( 'data-background-video-class' ),\n\t\t\t\t\tbackgroundVideoStyle = slide.getAttribute( 'data-background-video-style' ),\n\t\t\t\t\tbackgroundVideoFragmentIndex = slide.getAttribute( 'data-background-video-fragment-index' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tlet image = document.createElement( 'img' );\n\t\t\t\t\t\timage.src = backgroundImage.trim();\n\t\t\t\t\t\tif ( backgroundSize ) image.style.objectFit = backgroundSize;\n\t\t\t\t\t\tbackgroundContent.appendChild( image );\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet images = backgroundImage.split( ',' ).map( ( background, i ) => {\n\t\t\t\t\t\t\tlet image = document.createElement( 'img' );\n\n\t\t\t\t\t\t\tlet imageClass = slide.hasAttribute( 'data-background-image-class-' + i ) ? slide.getAttribute ( 'data-background-image-class-' + i ) : undefined;\n\t\t\t\t\t\t\tlet imageStyle = slide.hasAttribute( 'data-background-image-style-' + i ) ? slide.getAttribute ( 'data-background-image-style-' + i ) : undefined;\n\t\t\t\t\t\t\tlet imageFragmentIndex = slide.hasAttribute( 'data-background-image-fragment-index-' + i ) ? slide.getAttribute ( 'data-background-image-fragment-index-' + i ).trim() : undefined;\n\n\t\t\t\t\t\t\tif ( imageStyle )\n\t\t\t\t\t\t\t\timage.style.cssText = imageStyle;\n\n\t\t\t\t\t\t\tif ( imageClass )\n\t\t\t\t\t\t\t\timageClass.split(' ').forEach( ( e, i ) => {\n\t\t\t\t\t\t\t\t\tif ( e && e.length > 0 ) image.classList.add( e );\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif ( imageFragmentIndex )\n\t\t\t\t\t\t\t\timage.setAttribute( 'data-fragment-index', imageFragmentIndex );\n\n\t\t\t\t\t\t\timage.classList.add( 'layer' + i );\n\n\t\t\t\t\t\t\timage.src = background.trim();\n\n\t\t\t\t\t\t\tif ( backgroundSize )\n\t\t\t\t\t\t\t\timage.style.objectFit = backgroundSize;\n\t\t\t\t\t\t\treturn image;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\timages.forEach( image => { backgroundContent.appendChild( image ) });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tbackgroundVideo.trim().split(';').forEach((vd, idx) => {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\t\t\t\t\tif ( backgroundVideoStyle )\n\t\t\t\t\t\tvideo.style.cssText = backgroundVideoStyle;\n\n\t\t\t\t\tif ( backgroundVideoClass )\n\t\t\t\t\t\tbackgroundVideoClass.split(' ').forEach( cls => {\n\t\t\t\t\t\t\tvideo.classList.add( cls );\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif ( backgroundVideoFragmentIndex && backgroundVideoFragmentIndex.trim().length > 0 ) {\n\t\t\t\t\t\t\tlet videoFragmentIndex = backgroundVideoFragmentIndex.trim().split(';');\n\t\t\t\t\t\t\tvideo.setAttribute( 'data-fragment-index', videoFragmentIndex[idx] || '0' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\t// video.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tvd.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tvideo.addEventListener('play', function(event) {\n\t\t\t\t\t\tlet v = event.target;\n\t\t\t\t\t\tv.classList.add('playing');\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('playing', function(event) {\n\t\t\t\t\t\tlet v = event.target;\n\t\t\t\t\t\tv.classList.add('playing');\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('pause', function(event) {\n\t\t\t\t\t\tlet v = event.target;\n\t\t\t\t\t\tv.classList.remove('playing');\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('waiting', function(event) {\n\t\t\t\t\t\tlet v = event.target;\n\t\t\t\t\t\tv.classList.remove('playing');\n\t\t\t\t\t});\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) &&\n\t\t\t\t    !closest( el, '.fragment.visible.current-fragment' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tif ( event.target.classList.contains( 'media-controls' ) ) {\n\t\t\t\tthis.Reveal.mediaControls.attach( event.target );\n\t\t\t}\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tif ( el.classList.contains( 'media-controls' ) ) {\n\t\t\t\t\t\tthis.Reveal.mediaControls.detach( el );\n\t\t\t\t\t}\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tconst query = this.jumpInput.value.trim( '' );\n\t\tlet indices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\n\t\t// If no valid index was found and the input query is a\n\t\t// string, fall back on a simple search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t\tbackgroundClass: slide.getAttribute( 'data-background-class' ) ? slide.getAttribute( 'data-background-class' ).split(' ') : null,\n\t\t\tbackgroundStyle: slide.getAttribute( 'data-background-style' ) ? slide.getAttribute( 'data-background-style' ).split(';') : null,\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundPosition ) contentElement.style.objectPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\t\tif( data.backgroundClass ) data.backgroundClass.forEach((c, i) => { contentElement.classList.add(c); });\n\t\tif( data.backgroundStyle ) data.backgroundStyle.forEach((s, i) => {\n\t\t\tif (s.length > 0) {\n\t\t\t\tlet p = s.split(':');\n\t\t\t\tlet v;\n\t\t\t\tif (p[1]) v = p[1].split('!');\n\t\t\t\tif (v)\n\t\t\t\t\tcontentElement.style.setProperty(p[0].trim(), v[0] ? v[0].trim() : v[0], v[1] ? v[1].trim() : v[1]);\n\t\t\t\telse\n\t\t\t\t\tcontentElement.style.setProperty(p[0].trim(), undefined, undefined);\n\t\t\t}\n\t\t});\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// Copy the presentation-wide background to each page\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tconst scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Triggers for each fragment group\n\t\t\t\t...fragmentGroups.map( ( fragments, i ) => ({\n\t\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded conten\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tpage.slideElement.classList.remove( 'present' );\n\t\t\tpage.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js';\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = this.queryAllFragments( '.fragment:not(.disabled)', currentSlide );\n\t\t\tlet hiddenFragments = this.queryAllFragments( '.fragment:not(.disabled):not(.visible)', currentSlide );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( this.queryAllFragments( '.fragment', verticalSlide ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( this.queryAllFragments( '.fragment', horizontalSlide ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Query fragments on both slide and its background\n\t *\n\t * @param {string} [selector] The query selector string\n\t * @param {?element} [slide] The slide which the selection runs on\n\t *\n\t * @return [element]\n\t */\n\tqueryAllFragments( selector, slide = this.Reveal.getCurrentSlide() ) {\n\t\tlet background = this.Reveal.getSlideBackground(slide);\n\n\t\tlet fragments = queryAll( slide, selector );\n\t\tfragments = fragments.concat( queryAll ( background, selector ) );\n\n\t\treturn fragments;\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( this.queryAllFragments( '.fragment', currentSlide ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( this.queryAllFragments( '.fragment.visible', currentSlide ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' );\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t\tif ( ['VIDEO', 'AUDIO'].includes( el.tagName ) ) {\n\t\t\t\t\t\t\t\tel.currentTime = 0;\n\t\t\t\t\t\t\t\tif ( el.classList.contains( 'media-controls' ) ) {\n\t\t\t\t\t\t\t\t\tthis.Reveal.mediaControls.attach( el );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tel.play();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ['VIDEO', 'AUDIO'].includes( el.tagName ) ) {\n\t\t\t\t\t\t\tel.pause();\n\t\t\t\t\t\t\tif ( el.classList.contains( 'media-controls' ) ) {\n\t\t\t\t\t\t\t\tthis.Reveal.mediaControls.detach( el );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tif ( ['VIDEO', 'AUDIO'].includes( el.tagName ) ) {\n\t\t\t\t\t\t\t\tel.pause();\n\t\t\t\t\t\t\t\tel.currentTime = 0;\n\t\t\t\t\t\t\t\tif ( el.classList.contains( 'media-controls' ) ) {\n\t\t\t\t\t\t\t\t\tthis.Reveal.mediaControls.detach( el );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( this.queryAllFragments( '.fragment', slide ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( this.queryAllFragments( '.fragment:not(.disabled)', currentSlide ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( this.queryAllFragments( '.fragment:not(.disabled).visible', currentSlide ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( keyCode === 191 && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual multimedia controls for the background video presentation.\n */\nexport default class MediaControls {\n\n\tfastForwardIcons = {\n\t\tundefined: 'mdi-fast-forward',\n\t\t'default': 'mdi-fast-forward',\n\t\t5: 'mdi-fast-forward-5',\n\t\t10: 'mdi-fast-forward-10',\n\t\t15: 'mdi-fast-forward-15',\n\t\t30: 'mdi-fast-forward-30',\n\t\t45: 'mdi-fast-forward-45',\n\t\t60: 'mdi-fast-forward-60',\n\t};\n\n\trewindIcons = {\n\t\tundefined: 'mdi-rewind',\n\t\t'default': 'mdi-rewind',\n\t\t5: 'mdi-rewind-5',\n\t\t10: 'mdi-rewind-10',\n\t\t15: 'mdi-rewind-15',\n\t\t30: 'mdi-rewind-30',\n\t\t45: 'mdi-rewind-45',\n\t\t60: 'mdi-rewind-60',\n\t};\n\n\tcontrols = {\n\t\t'play': {\n\t\t\t'icon': { 'lib': 'mdi-play' },\n\t\t\t'action': [ { 'name': 'click', 'func': this.onClickPlay } ],\n\t\t},\n\t\t'skipPrevious': {\n\t\t\t'icon': { 'lib': 'mdi-skip-previous' },\n\t\t\t'action': [ { 'name': 'click', 'func': this.onClickSkipPrev } ],\n\t\t},\n\t\t'rewind': {\n\t\t\t'icon': { 'lib': this.rewindIcons, 'param': 'step' },\n\t\t\t'action': [ { 'name': 'click', 'func': this.onClickRewind } ],\n\t\t},\n\t\t'fastForward': {\n\t\t\t'icon': { 'lib': this.fastForwardIcons, 'param': 'step' },\n\t\t\t'action': [ { 'name': 'click', 'func': this.onClickFastForward } ],\n\t\t}\n\t}\n\n\tdefaults = {\n\t\t'step': 5,\n\t\t'controls' : this.controls,\n\t};\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.media = [];\n\t\tthis.config = {};\n\t\tObject.entries(this.defaults).forEach((e, i, a) => {\n\t\t\tlet [key, value] = e;\n\t\t\tthis.config[ key ] = value;\n\t\t});\n\n\t}\n\n\tconfigure( config, oldConfig ) {\n\n\t\tif ( config.mediacontrols ) {\n\t\t\tObject.entries(config.mediacontrols).forEach((e, i, a) => {\n\t\t\t\tlet [key, value] = e;\n\t\t\t\tthis.config[ key ] = value || this.defaults[ key ];\n\t\t\t});\n\t\t}\n\n\n\t\tObject.entries(this.config.controls).forEach((e, i, a) => {\n\t\t\tlet [key, value] = e;\n\t\t\tvalue.element = this.createButton( key, value.action );\n\t\t\tthis.removeIcon( value.element );\n\t\t\tlet icon = this.createIcon( value.icon.lib, this.config[ value.icon.param ] );\n\t\t\tvalue.element.appendChild( icon );\n\t\t});\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.id = 'mediacontrols';\n\t\tthis.element.classList.add( 'mediacontrols' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\tgetConfig() {\n\t\treturn this.config;\n\t}\n\n\tcreateButton( id, action ) {\n\n\t\tthis.element.querySelectorAll( 'button#' + id ).forEach((e, i, a) => {\n\t\t\te.parentNode.removeChild( e );\n\t\t});\n\n\t\tlet button = document.createElement( 'button' );\n\t\tbutton.id = id;\n\t\taction.forEach((e, i, a) => {\n\t\t\tbutton.addEventListener( e.name, e.func.bind( this ), false);\n\t\t});\n\n\t\tthis.element.appendChild( button );\n\n\t\treturn button;\n\n\t}\n\n\tremoveIcon( button ) {\n\n\t\tif ( button !== undefined ) {\n\t\t\tbutton.querySelectorAll( 'i' ).forEach((e, i, a) => {\n\t\t\t\te.parentNode.removeChild( e );\n\t\t\t});\n\t\t}\n\n\t}\n\n\tcreateIcon( def, param ) {\n\t\t\n\t\tlet icon = document.createElement( 'i' );\n\t\ticon.classList.add( 'mdi' );\n\n\t\tif ( typeof def === 'string' ) {\n\t\t\ticon.classList.add( def );\n\t\t} else {\n\t\tlet name = def.hasOwnProperty( param ) ?\n\t\t    def[ param ] : param[ 'default' ];\n\t\t\ticon.classList.add( name );\n\t\t}\n\n\t\treturn icon;\n\n\t}\n\n\tattach( element ) {\n\n\t\tif ( this.media.indexOf( element ) > -1 )\n\t\t\treturn;\n\n\t\tthis.media.push( element );\n\n\t\telement.addEventListener( 'play', this.onMediaEvent.bind( this ), false );\n\t\telement.addEventListener( 'pause', this.onMediaEvent.bind( this ), false );\n\t\telement.addEventListener( 'ended', this.onMediaEvent.bind( this ), false );\n\n\t\tthis.visibilityToggle();\n\n\t}\n\n\tdetach( element ) {\n\n\t\telement.removeEventListener( 'play', this.onMediaEvent.bind( this ), false );\n\t\telement.removeEventListener( 'pause', this.onMediaEvent.bind( this ), false );\n\t\telement.removeEventListener( 'ended', this.onMediaEvent.bind( this ), false );\n\n\t\tlet index = this.media.indexOf( element );\n\t\tif (index > -1)\n\t\t\tthis.media.splice( index, 1 );\n\n\t\tthis.visibilityToggle();\n\n\t}\n\n\tvisibilityToggle() {\n\n\t\tif ( this.media.length > 0)\n\t\t\tthis.element.classList.add( 'visible' );\n\t\telse\n\t\t\tthis.element.classList.remove( 'visible' );\n\n\t}\n\n\tgetDefaultControlNames() {\n\t\treturn Object.keys( this.controls );\n\t}\n\n\tgetDefaultControl( name ) {\n\t\treturn this.controls[ name ];\n\t}\n\n\tonClickPlay( event ) {\n\n\t\tthis.media.forEach((e, i, a) => {\n\t\t\tif ( e.paused ) {\n\n\t\t\t\te.play();\n\n\t\t\t} else {\n\n\t\t\t\te.pause();\n\n\t\t\t}\n\t\t});\n\n\t}\n\n\tonClickFastForward( event ) {\n\n\t\tlet step = this.config.step;\n\n\t\tthis.media.forEach((e, i, a) => {\n\n\t\t\tlet currentTime = e.duration - e.currentTime > step ? e.currentTime + step : e.duration;\n\t\t\te.currentTime = currentTime;\n\n\t\t});\n\n\t}\n\n\tonClickRewind( event ) {\n\n\t\tlet step = this.config.step;\n\n\t\tthis.media.forEach((e, i, a) => {\n\n\t\t\tlet currentTime = e.currentTime > step ? e.currentTime - step : 0;\n\t\t\te.currentTime = currentTime;\n\n\t\t});\n\n\t}\n\n\tonClickSkipPrev( event ) {\n\n\t\tthis.media.forEach((e, i, a) => {\n\n\t\t\te.currentTime = 0;\n\n\t\t});\n\n\t}\n\n\tonMediaEvent( event ) {\n\n\t\tlet paused = this.media.every((e, i, a) => {\n\t\t\treturn e.paused || e.ended;\n\t\t});\n\n\t\tif ( paused ) {\n\n\t\t\tthis.controls.play.element.querySelector( 'i' ).classList.remove( 'mdi-pause' );\n\t\t\tthis.controls.play.element.querySelector( 'i' ).classList.add( 'mdi-play' );\n\n\t\t} else {\n\n\t\t\tthis.controls.play.element.querySelector( 'i' ).classList.remove( 'mdi-play' );\n\t\t\tthis.controls.play.element.querySelector( 'i' ).classList.add( 'mdi-pause' );\n\n\t\t}\n\t}\n}\n","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'grid',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}\n","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport MediaControls from './controllers/mediacontrols.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.0.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\t\tfullScale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tmediaControls = new MediaControls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\t\tmediaControls.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config };\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tmediaControls.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\tfullScale = 1 / ( 1 - config.margin );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\tdom.slides.style.display = 'grid';\n\t\t\t\t\tdom.slides.style.placeContent = 'center stretch';\n\t\t\t\t\tif (config.center) dom.slides.style.alignItems = 'center';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.alignSelf = 'center';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif( slide.hasAttribute( 'data-fullscreen' ) ) {\n\t\t\t\t\t\tslide.style.transform = 'scale(' + fullScale + ')';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Responsively turn on the scroll mode if there is an activation\n\t\t\t\t// width configured. Ignore if we're configured to always be in\n\t\t\t\t// scroll mode.\n\t\t\t\tif( typeof config.scrollActivationWidth === 'number' && config.view !== 'scroll' ) {\n\t\t\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\t\t\tif( !scrollView.isActive() ) scrollView.activate();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tif( slideChanged ) {\n\t\t\tnotes.update();\n\t\t\tbackgrounds.update();\n\t\t\tbackgrounds.updateParallax();\n\t\t\tslideNumber.update();\n\t\t}\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t\telement.style.display = 'grid';\n\t\t\t\t\telement.style.placeContent = 'center stretch';\n\t\t\t\t\tif (config.center) element.style.alignItems = 'center';\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\t\tUtil.queryAll( Reveal.getSlideBackground( container ), '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\t\tUtil.queryAll( Reveal.getSlideBackground( container ), '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\t\tlet currentBackground = Reveal.getSlideBackground( currentSlide );\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\t\t\tlet allBackgroundFragments = currentBackground.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 || allBackgroundFragments.length > 0) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\t\t\t\tlet visibleBackgroundFragments = currentBackground.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( ( visibleFragments.length + visibleBackgroundFragments.length ) / ( allFragments.length + allBackgroundFragments.length ) ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet currentBackground = Reveal.getSlideBackground( currentSlide );\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0 || currentBackground.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment[data-fragment-index]' );\n\t\t\t\tlet currentBackgroundFragment = currentBackground.querySelector( '.current-fragment[data-fragment-index]' );\n\t\t\t\tif( currentFragment ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse if( currentBackgroundFragment ) {\n\t\t\t\t\tf = parseInt( currentBackgroundFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = -1;\n\t\t\t\t\tcurrentSlide.querySelectorAll( '.fragment.visible[data-fragment-index]' ).forEach((e, i) => {\n\t\t\t\t\t\tlet n = parseInt( e.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t\tf = Math.max(f, n);\n\t\t\t\t\t});\n\t\t\t\t\tcurrentBackground.querySelectorAll( '.fragment.visible[data-fragment-index]' ).forEach((e, i) => {\n\t\t\t\t\t\tlet n = parseInt( e.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t\tf = Math.max(f, n);\n\t\t\t\t\t});\n\t\t\t\t\tf += currentSlide.querySelectorAll( '.fragment.visible:not([data-fragment-index])' ).length;\n\t\t\t\t\tf += currentBackground.querySelectorAll( '.fragment.visible:not([data-fragment-index])' ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Media playback\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tmediaControls,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","Object","defineProperty","fitty_module","_extends","assign","arguments","source","key","prototype","hasOwnProperty","w","toArray","nl","slice","DrawState","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyle","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","destroy","_","observeMutations","observer","disconnect","originalStyle","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","newbie","push","init","unfreeze","freeze","undefined","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","placeContent","center","alignItems","tagName","setAttribute","getAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundSize","backgroundVideo","backgroundVideoClass","backgroundVideoStyle","backgroundVideoFragmentIndex","backgroundVideoLoop","backgroundVideoMuted","trim","image","src","objectFit","images","imageClass","imageStyle","imageFragmentIndex","isSpeakerNotes","vd","idx","video","cls","videoFragmentIndex","muted","getMimeTypeFromFile","filename","addEventListener","event","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","removeEventListener","isAttachedToDOM","isVisible","currentTime","contains","mediaControls","attach","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","detach","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","url","getHash","formatNumber","delimiter","isNaN","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","getSlides","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","backgroundClass","backgroundStyle","dataPreload","opacity","objectPosition","c","s","p","setProperty","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","join","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","contentContainer","shouldAutoAnimateBetween","page","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","indexv","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","async","slides","injectPageNumbers","pageWidth","floor","margin","Promise","documentElement","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","queryAllFragments","hiddenFragments","prev","next","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","includes","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","toggleHelp","closeOverlay","Location","_defineProperty","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","MAX_REPLACE_STATE_FREQUENCY","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","MediaControls","default","icon","lib","func","onClickPlay","skipPrevious","onClickSkipPrev","rewind","rewindIcons","onClickRewind","fastForward","fastForwardIcons","onClickFastForward","step","entries","defaults","mediacontrols","createButton","removeIcon","createIcon","button","def","onMediaEvent","visibilityToggle","splice","getDefaultControlNames","getDefaultControl","paused","every","ended","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","autoSlidePlayer","ready","navigationHistory","fullScale","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","activateInitialView","activatePrintView","activateScrollView","removeEventListeners","parent","childElementCount","Device","pauseOverlay","statusElement","createStatusElement","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","alignSelf","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","allBackgroundFragments","visibleFragments","visibleBackgroundFragments","fragmentWeight","isVertical","currentBackgroundFragment","n","getSlidesAttributes","attributes","attribute","getSlide","indexf","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","scroll","Deck","enqueuedAPICalls","deck"],"mappings":"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"}